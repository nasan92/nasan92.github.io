<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Powershell - Tag - NASAN</title><link>https://nasan92.github.io/tags/powershell/</link><description>Powershell - Tag - NASAN</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 19 Feb 2022 08:05:41 +0100</lastBuildDate><atom:link href="https://nasan92.github.io/tags/powershell/" rel="self" type="application/rss+xml"/><item><title>MindMap Building Powershell Modules - Brandon Olin</title><link>https://nasan92.github.io/posts/2022-02-19-powershellmodules/</link><pubDate>Sat, 19 Feb 2022 08:05:41 +0100</pubDate><author>Author</author><guid>https://nasan92.github.io/posts/2022-02-19-powershellmodules/</guid><description>This MindMap tries to give an Overview over the book Building Powershell Modules - Brandon Olin PreviewPowerShellModules
" Preview</description></item><item><title>MindMap PowerShell Classes</title><link>https://nasan92.github.io/posts/2021-12-06-powershellclasses/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://nasan92.github.io/posts/2021-12-06-powershellclasses/</guid><description>A MindMap about PowerShell Classes
PowerShell Classes MindMap I&amp;rsquo;m learning PowerShell and tought it could be helpful to create a MindMap about Classes. It should help to get a better overview over the topic.
PreviewPowershell Classes
" Preview
Further Links To learn more about classes follow those links:
About_Classes PowerShell Classes - Getting Started</description></item><item><title>Windows Sandbox Customization with DSC</title><link>https://nasan92.github.io/posts/2021-08-23-windows-sandbox-customization-dsc/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://nasan92.github.io/posts/2021-08-23-windows-sandbox-customization-dsc/</guid><description>Demo Windows Sandbox Customization with Powershell DSC
In this Demo I&amp;rsquo;m going to show you how you can use the Windows Sandbox and do some customization with Powershell DSC.
Enable Windows Sandbox First you need to enable the Windows Sandbox. You can do that by enabling the windows feature using the GUI or enable it with Powershell:
Enable-WindowsOptionalFeature -FeatureName &amp;#34;Containers-DisposableClientVM&amp;#34; -Online Customization Files You can create a XML Config file like the following example and save it anywhere as .</description></item><item><title>How to show last bootuptime of Computers with Powershell</title><link>https://nasan92.github.io/posts/2021-05-12-show-last-bootup-time/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://nasan92.github.io/posts/2021-05-12-show-last-bootup-time/</guid><description>Use Get-CimInstance with the ClassName win32_operatingsystem You can query the ClassName win32_operatingsystem and select from there the computername csname and the last bootup time lastbootuptime
Get-CimInstance -ComputerName &amp;#39;DC01&amp;#39; -ClassName win32_operatingsystem | select csname, lastbootuptime Show last bootuptime for multiple computers If you want to do that for multiple computers you can for example do it wit a foreach loop:
# First query the computer from which you want to have this information: $computer = Get-ADComputer -Filter * | where Name -Match dc # Now get the lastbootuptime for every computer in the computer array: foreach($c in $computer){ $computername = $c.</description></item><item><title>Search a specific entry over all GPO</title><link>https://nasan92.github.io/posts/2021-05-07-search-gpo/</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://nasan92.github.io/posts/2021-05-07-search-gpo/</guid><description><![CDATA[A way to search a specific setting over all GPOs
Generate a GPO Report over your Domain You can generate a GPO Report over your Domain either in a XML or HTML file and then search through that file.
To generate a XML use this command:
Get-GPOReport -All -Domain &#34;domain.com&#34; -Server &#34;DC01&#34; -ReportType XML -Path &#34;C:\GPOReports\GPOReportsAll.xml&#34; To generate a HTML file you can use this command:
Get-GPOReport -All -Domain &#34;domain.com&#34; -Server &#34;DC01&#34; -ReportType HTML -Path &#34;C:\GPOReports\GPOReportsAll.]]></description></item><item><title>Run a gpresult on a remote computer</title><link>https://nasan92.github.io/posts/2021-05-07-gpresult-remote/</link><pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://nasan92.github.io/posts/2021-05-07-gpresult-remote/</guid><description><![CDATA[How to run a gpresult on a remote computer
Use the Invoke-Command You can simply use the Invoke Command to run the gpresult command on a remote computer:
 Define the ComputerName after the Invoke-Command In the ScriptBlock you can simply run your command  here comes the new highlight:
199 200  Invoke-Command -ComputerName &#39;ComputerName&#39; -ScriptBlock{ gpresult /r /USER &#39;username&#39;   Run gpresult for a specific User in a RDS environment In the following script you just have to define the username + the RDS ConnectionBroker.]]></description></item></channel></rss>